/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package cover.made;


import AppPackage.AnimationClass;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Calendar;
import static java.util.Calendar.AM_PM;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Prakhil
 */
public class admin extends javax.swing.JFrame {
        Connection con=null;
       int timerun=0;
        
        
    /**
     * Creates new form 
     */
    public admin() {
        initComponents();
        AnimationClass a=new AnimationClass();
        a.jLabelXLeft(400, 300, 21,1,belief);
        
        a.jLabelXRight(-100, 70, 10,5,srh);
        
        
    try{
         Class.forName("com.mysql.jdbc.Driver");
        Connection con=(Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/project", "root", "");
        com.mysql.jdbc.Statement stmt=(com.mysql.jdbc.Statement)con.createStatement();
          String query="select * from stock";
        PreparedStatement ps=con.prepareStatement(query);
         ResultSet rs=ps.executeQuery();
         if(rs.next())
         {
             cs1.setText(rs.getString("extralarge"));
             cs2.setText(rs.getString("large"));
             cs3.setText(rs.getString("medium"));
             cs4.setText(rs.getString("small"));
             
         }
        
     
     
     }catch(ClassNotFoundException | SQLException e)
     {
      
     }
    new Thread()
        {
            public void run()
            {
                while(timerun==0)
                {
                    Calendar cal=new GregorianCalendar();
                    int hour=cal.get(Calendar.HOUR);
                    int min=cal.get(Calendar.MINUTE);
                    int sec=cal.get(Calendar.SECOND);
                    int am_pm=cal.get(Calendar.AM_PM);
                    String day_night;
                    if(AM_PM==1)
                    {
                        day_night="PM";
                    }
                    else
                    {
                        day_night="AM";
                    }
                    String time= hour+":"+min+":"+sec+"  "+day_night;
                    bob.setText(time);
                }
        
            }
        }.start();
    
    
    
    
    }
        
    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel14 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        belief = new javax.swing.JLabel();
        tab1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        search1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        un = new javax.swing.JLabel();
        search = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        srh = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        p2 = new javax.swing.JLabel();
        p1 = new javax.swing.JLabel();
        a1 = new javax.swing.JLabel();
        e1 = new javax.swing.JLabel();
        s1 = new javax.swing.JLabel();
        b1 = new javax.swing.JLabel();
        f1 = new javax.swing.JLabel();
        d1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        details = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        delete = new javax.swing.JButton();
        sort = new javax.swing.JComboBox();
        asc = new javax.swing.JRadioButton();
        dsc = new javax.swing.JRadioButton();
        detailp = new javax.swing.JLabel();
        Settings = new javax.swing.JPanel();
        logout = new javax.swing.JLabel();
        Stock1 = new javax.swing.JLabel();
        Stock2 = new javax.swing.JLabel();
        Stock3 = new javax.swing.JLabel();
        Stock4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        Stock5 = new javax.swing.JLabel();
        Stock6 = new javax.swing.JLabel();
        Stock7 = new javax.swing.JLabel();
        Stock8 = new javax.swing.JLabel();
        stock1 = new javax.swing.JTextField();
        stock3 = new javax.swing.JTextField();
        stock4 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        Stock9 = new javax.swing.JLabel();
        Stock10 = new javax.swing.JLabel();
        Stock11 = new javax.swing.JLabel();
        Stock12 = new javax.swing.JLabel();
        Stock13 = new javax.swing.JLabel();
        Stock14 = new javax.swing.JLabel();
        Stock15 = new javax.swing.JLabel();
        Stock16 = new javax.swing.JLabel();
        cs1 = new javax.swing.JLabel();
        cs2 = new javax.swing.JLabel();
        cs3 = new javax.swing.JLabel();
        cs4 = new javax.swing.JLabel();
        stocker = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        clear = new javax.swing.JComboBox();
        jButton4 = new javax.swing.JButton();
        set = new javax.swing.JLabel();
        bob = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        stock5 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1366, 768));
        setMinimumSize(new java.awt.Dimension(1366, 768));
        setPreferredSize(new java.awt.Dimension(1366, 768));
        getContentPane().setLayout(null);

        jLabel14.setFont(new java.awt.Font("Ravie", 1, 36)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(204, 0, 51));
        jLabel14.setText(" MaDE");
        getContentPane().add(jLabel14);
        jLabel14.setBounds(290, 30, 170, 30);

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Ravie", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("CoVEr");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(150, 30, 160, 30);

        belief.setBackground(new java.awt.Color(51, 153, 255));
        belief.setFont(new java.awt.Font("Script MT Bold", 0, 24)); // NOI18N
        belief.setForeground(new java.awt.Color(153, 153, 153));
        belief.setText("Belief.That's Everything....");
        getContentPane().add(belief);
        belief.setBounds(400, 80, 270, 16);

        tab1.setFont(new java.awt.Font("Rockwell Condensed", 1, 18)); // NOI18N
        tab1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tab1MouseClicked(evt);
            }
        });

        search1.setBackground(new java.awt.Color(255, 255, 255));
        search1.setMaximumSize(new java.awt.Dimension(1125, 544));
        search1.setMinimumSize(new java.awt.Dimension(1125, 544));
        search1.setRequestFocusEnabled(false);
        search1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                search1MouseMoved(evt);
            }
        });
        search1.setLayout(null);

        jPanel5.setBackground(new java.awt.Color(51, 153, 255));
        jPanel5.setMaximumSize(new java.awt.Dimension(419, 54));
        jPanel5.setMinimumSize(new java.awt.Dimension(419, 54));
        jPanel5.setPreferredSize(new java.awt.Dimension(419, 54));
        jPanel5.setLayout(null);

        un.setBackground(new java.awt.Color(204, 204, 255));
        un.setFont(new java.awt.Font("Rockwell Condensed", 1, 18)); // NOI18N
        un.setForeground(new java.awt.Color(204, 204, 204));
        un.setText("User Name  :");
        jPanel5.add(un);
        un.setBounds(20, 10, 94, 22);

        search.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        search.setForeground(new java.awt.Color(102, 102, 102));
        search.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.gray, java.awt.Color.darkGray, java.awt.Color.darkGray, java.awt.Color.gray));
        search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchKeyPressed(evt);
            }
        });
        jPanel5.add(search);
        search.setBounds(122, 12, 193, 23);

        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton1);
        jButton1.setBounds(330, 10, 70, 30);

        search1.add(jPanel5);
        jPanel5.setBounds(700, 30, 430, 50);
        jPanel5.getAccessibleContext().setAccessibleName("");

        srh.setFont(new java.awt.Font("Bauhaus 93", 0, 36)); // NOI18N
        srh.setForeground(new java.awt.Color(102, 102, 102));
        srh.setText("Search");
        search1.add(srh);
        srh.setBounds(-100, 30, 116, 54);

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cover/made/different_size_and_color_envelop.jpg"))); // NOI18N
        search1.add(jLabel8);
        jLabel8.setBounds(601, 136, 450, 358);

        jLabel26.setFont(new java.awt.Font("Rockwell Condensed", 1, 18)); // NOI18N
        jLabel26.setText(" :");
        search1.add(jLabel26);
        jLabel26.setBounds(199, 197, 16, 22);

        jLabel34.setFont(new java.awt.Font("Rockwell Condensed", 1, 18)); // NOI18N
        jLabel34.setText("Pin code  ");
        search1.add(jLabel34);
        jLabel34.setBounds(111, 402, 77, 22);

        jLabel37.setFont(new java.awt.Font("Rockwell Condensed", 1, 18)); // NOI18N
        jLabel37.setText(" :");
        search1.add(jLabel37);
        jLabel37.setBounds(200, 442, 16, 22);

        jLabel29.setFont(new java.awt.Font("Rockwell Condensed", 1, 18)); // NOI18N
        jLabel29.setText(" :");
        search1.add(jLabel29);
        jLabel29.setBounds(200, 322, 16, 22);

        jLabel33.setFont(new java.awt.Font("Rockwell Condensed", 1, 18)); // NOI18N
        jLabel33.setText("Phone no  ");
        search1.add(jLabel33);
        jLabel33.setBounds(111, 362, 83, 22);

        jLabel24.setFont(new java.awt.Font("Rockwell Condensed", 1, 18)); // NOI18N
        jLabel24.setText("Full name ");
        search1.add(jLabel24);
        jLabel24.setBounds(111, 153, 85, 22);

        jLabel25.setFont(new java.awt.Font("Rockwell Condensed", 1, 18)); // NOI18N
        jLabel25.setText(" :");
        search1.add(jLabel25);
        jLabel25.setBounds(199, 153, 16, 22);

        jLabel23.setFont(new java.awt.Font("Rockwell Condensed", 1, 18)); // NOI18N
        jLabel23.setText("Sex          ");
        search1.add(jLabel23);
        jLabel23.setBounds(111, 241, 85, 22);

        jLabel27.setFont(new java.awt.Font("Rockwell Condensed", 1, 18)); // NOI18N
        jLabel27.setText(" :");
        search1.add(jLabel27);
        jLabel27.setBounds(199, 241, 16, 22);

        jLabel35.setFont(new java.awt.Font("Rockwell Condensed", 1, 18)); // NOI18N
        jLabel35.setText("District ");
        search1.add(jLabel35);
        jLabel35.setBounds(111, 442, 57, 22);

        jLabel31.setFont(new java.awt.Font("Rockwell Condensed", 1, 18)); // NOI18N
        jLabel31.setText("Email       ");
        search1.add(jLabel31);
        jLabel31.setBounds(111, 278, 85, 22);

        jLabel30.setFont(new java.awt.Font("Rockwell Condensed", 1, 18)); // NOI18N
        jLabel30.setText(" :");
        search1.add(jLabel30);
        jLabel30.setBounds(200, 362, 16, 22);

        jLabel28.setFont(new java.awt.Font("Rockwell Condensed", 1, 18)); // NOI18N
        jLabel28.setText(" :");
        search1.add(jLabel28);
        jLabel28.setBounds(199, 278, 16, 22);

        jLabel22.setFont(new java.awt.Font("Rockwell Condensed", 1, 18)); // NOI18N
        jLabel22.setText("Birthday    ");
        search1.add(jLabel22);
        jLabel22.setBounds(111, 197, 85, 22);

        jLabel32.setFont(new java.awt.Font("Rockwell Condensed", 1, 18)); // NOI18N
        jLabel32.setText("Address ");
        search1.add(jLabel32);
        jLabel32.setBounds(111, 322, 62, 22);

        jLabel36.setFont(new java.awt.Font("Rockwell Condensed", 1, 18)); // NOI18N
        jLabel36.setText(" :");
        search1.add(jLabel36);
        jLabel36.setBounds(200, 402, 16, 22);

        p2.setFont(new java.awt.Font("Goudy Old Style", 1, 18)); // NOI18N
        search1.add(p2);
        p2.setBounds(220, 400, 180, 30);

        p1.setFont(new java.awt.Font("Goudy Old Style", 1, 18)); // NOI18N
        search1.add(p1);
        p1.setBounds(220, 360, 200, 30);

        a1.setFont(new java.awt.Font("Goudy Old Style", 1, 18)); // NOI18N
        search1.add(a1);
        a1.setBounds(220, 320, 330, 26);

        e1.setFont(new java.awt.Font("Goudy Old Style", 1, 18)); // NOI18N
        search1.add(e1);
        e1.setBounds(221, 278, 350, 26);

        s1.setFont(new java.awt.Font("Goudy Old Style", 1, 18)); // NOI18N
        search1.add(s1);
        s1.setBounds(221, 237, 100, 30);

        b1.setFont(new java.awt.Font("Goudy Old Style", 1, 18)); // NOI18N
        search1.add(b1);
        b1.setBounds(221, 193, 110, 30);

        f1.setFont(new java.awt.Font("Goudy Old Style", 1, 18)); // NOI18N
        search1.add(f1);
        f1.setBounds(220, 150, 360, 30);

        d1.setFont(new java.awt.Font("Goudy Old Style", 1, 18)); // NOI18N
        search1.add(d1);
        d1.setBounds(220, 440, 160, 30);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(search1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(search1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        search1.getAccessibleContext().setAccessibleName("");
        search1.getAccessibleContext().setAccessibleDescription("");

        tab1.addTab("                     Search                      ", jPanel1);
        jPanel1.getAccessibleContext().setAccessibleName("");

        details.setBackground(new java.awt.Color(255, 255, 255));
        details.setMaximumSize(new java.awt.Dimension(1125, 544));
        details.setMinimumSize(new java.awt.Dimension(1125, 544));
        details.setLayout(null);

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "User Name", "Extra large Quantity", "Large Quantity", "Medium Quantity", "Small Quantity", "Total Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        table.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        table.setUpdateSelectionOnSort(false);
        jScrollPane1.setViewportView(table);
        if (table.getColumnModel().getColumnCount() > 0) {
            table.getColumnModel().getColumn(2).setResizable(false);
            table.getColumnModel().getColumn(3).setResizable(false);
            table.getColumnModel().getColumn(4).setResizable(false);
            table.getColumnModel().getColumn(5).setResizable(false);
        }
        table.getAccessibleContext().setAccessibleName("");
        table.getAccessibleContext().setAccessibleDescription("");

        details.add(jScrollPane1);
        jScrollPane1.setBounds(33, 170, 885, 254);

        delete.setBackground(new java.awt.Color(204, 0, 51));
        delete.setFont(new java.awt.Font("Rockwell Condensed", 1, 14)); // NOI18N
        delete.setForeground(new java.awt.Color(255, 255, 255));
        delete.setText("Delete record");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        details.add(delete);
        delete.setBounds(980, 170, 118, 130);

        sort.setBackground(new java.awt.Color(0, 155, 255));
        sort.setFont(new java.awt.Font("Rockwell Condensed", 1, 14)); // NOI18N
        sort.setForeground(new java.awt.Color(255, 255, 255));
        sort.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SORT", "Name", "Extralarge", "Large", "Medium", "Small", "Total_price", "ID", " " }));
        sort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortActionPerformed(evt);
            }
        });
        details.add(sort);
        sort.setBounds(980, 318, 118, 33);

        asc.setBackground(new java.awt.Color(255, 255, 255));
        asc.setFont(new java.awt.Font("Rockwell Condensed", 1, 12)); // NOI18N
        asc.setText("Ascenting");
        asc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ascActionPerformed(evt);
            }
        });
        details.add(asc);
        asc.setBounds(1021, 361, 73, 23);

        dsc.setBackground(new java.awt.Color(255, 255, 255));
        dsc.setFont(new java.awt.Font("Rockwell Condensed", 1, 12)); // NOI18N
        dsc.setText("Descenting");
        dsc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dscActionPerformed(evt);
            }
        });
        details.add(dsc);
        dsc.setBounds(1021, 384, 77, 23);

        detailp.setBackground(new java.awt.Color(51, 153, 255));
        detailp.setFont(new java.awt.Font("Bauhaus 93", 0, 24)); // NOI18N
        detailp.setForeground(new java.awt.Color(255, 255, 255));
        detailp.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        detailp.setText("Purchased details    ");
        detailp.setOpaque(true);
        details.add(detailp);
        detailp.setBounds(-330, 30, 340, 40);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(details, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(details, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        details.getAccessibleContext().setAccessibleName("");

        tab1.addTab("                       Details                            ", jPanel2);

        Settings.setBackground(new java.awt.Color(255, 255, 255));
        Settings.setMaximumSize(new java.awt.Dimension(1125, 551));
        Settings.setMinimumSize(new java.awt.Dimension(1125, 551));
        Settings.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                SettingsMouseMoved(evt);
            }
        });
        Settings.setLayout(null);

        logout.setFont(new java.awt.Font("Rockwell Condensed", 1, 18)); // NOI18N
        logout.setForeground(new java.awt.Color(0, 153, 255));
        logout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cover/made/images.jpg"))); // NOI18N
        logout.setText("Log Out");
        logout.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        logout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutMouseClicked(evt);
            }
        });
        Settings.add(logout);
        logout.setBounds(954, 107, 126, 41);

        Stock1.setFont(new java.awt.Font("Rockwell Condensed", 1, 18)); // NOI18N
        Stock1.setText("Extra Large");
        Settings.add(Stock1);
        Stock1.setBounds(194, 244, 84, 22);

        Stock2.setFont(new java.awt.Font("Rockwell Condensed", 1, 18)); // NOI18N
        Stock2.setText("Large");
        Settings.add(Stock2);
        Stock2.setBounds(194, 286, 41, 22);

        Stock3.setFont(new java.awt.Font("Rockwell Condensed", 1, 18)); // NOI18N
        Stock3.setText("Medium");
        Settings.add(Stock3);
        Stock3.setBounds(194, 328, 58, 22);

        Stock4.setFont(new java.awt.Font("Rockwell Condensed", 1, 18)); // NOI18N
        Stock4.setText("Small");
        Settings.add(Stock4);
        Stock4.setBounds(194, 370, 41, 22);

        jLabel7.setFont(new java.awt.Font("Bauhaus 93", 0, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(102, 102, 102));
        jLabel7.setText("Add Stock here..");
        Settings.add(jLabel7);
        jLabel7.setBounds(65, 173, 176, 36);

        Stock5.setFont(new java.awt.Font("Rockwell Condensed", 1, 18)); // NOI18N
        Stock5.setText(":");
        Settings.add(Stock5);
        Stock5.setBounds(296, 244, 17, 22);

        Stock6.setFont(new java.awt.Font("Rockwell Condensed", 1, 18)); // NOI18N
        Stock6.setText(":");
        Settings.add(Stock6);
        Stock6.setBounds(296, 286, 17, 22);

        Stock7.setFont(new java.awt.Font("Rockwell Condensed", 1, 18)); // NOI18N
        Stock7.setText(":");
        Settings.add(Stock7);
        Stock7.setBounds(296, 328, 17, 22);

        Stock8.setFont(new java.awt.Font("Rockwell Condensed", 1, 18)); // NOI18N
        Stock8.setText(":");
        Settings.add(Stock8);
        Stock8.setBounds(296, 370, 17, 22);

        stock1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        stock1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.gray, java.awt.Color.darkGray, java.awt.Color.darkGray, java.awt.Color.gray));
        stock1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stock1MouseClicked(evt);
            }
        });
        stock1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stock1ActionPerformed(evt);
            }
        });
        Settings.add(stock1);
        stock1.setBounds(331, 245, 66, 23);

        stock3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        stock3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.gray, java.awt.Color.darkGray, java.awt.Color.darkGray, java.awt.Color.gray));
        stock3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stock3MouseClicked(evt);
            }
        });
        stock3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stock3ActionPerformed(evt);
            }
        });
        Settings.add(stock3);
        stock3.setBounds(331, 329, 66, 23);

        stock4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        stock4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.gray, java.awt.Color.darkGray, java.awt.Color.darkGray, java.awt.Color.gray));
        stock4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stock4MouseClicked(evt);
            }
        });
        stock4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stock4ActionPerformed(evt);
            }
        });
        Settings.add(stock4);
        stock4.setBounds(331, 371, 66, 23);

        jButton2.setBackground(new java.awt.Color(0, 155, 255));
        jButton2.setFont(new java.awt.Font("Matura MT Script Capitals", 0, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Update");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        Settings.add(jButton2);
        jButton2.setBounds(489, 358, 93, 37);

        jLabel9.setFont(new java.awt.Font("Bauhaus 93", 0, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(102, 102, 102));
        jLabel9.setText("Current Stock");
        Settings.add(jLabel9);
        jLabel9.setBounds(725, 173, 144, 36);

        Stock9.setFont(new java.awt.Font("Rockwell Condensed", 1, 18)); // NOI18N
        Stock9.setForeground(new java.awt.Color(102, 102, 102));
        Stock9.setText("Extra Large");
        Settings.add(Stock9);
        Stock9.setBounds(765, 244, 84, 22);

        Stock10.setFont(new java.awt.Font("Rockwell Condensed", 1, 18)); // NOI18N
        Stock10.setForeground(new java.awt.Color(102, 102, 102));
        Stock10.setText("Large");
        Settings.add(Stock10);
        Stock10.setBounds(765, 284, 41, 22);

        Stock11.setFont(new java.awt.Font("Rockwell Condensed", 1, 18)); // NOI18N
        Stock11.setForeground(new java.awt.Color(102, 102, 102));
        Stock11.setText("Medium");
        Settings.add(Stock11);
        Stock11.setBounds(765, 324, 58, 22);

        Stock12.setFont(new java.awt.Font("Rockwell Condensed", 1, 18)); // NOI18N
        Stock12.setForeground(new java.awt.Color(102, 102, 102));
        Stock12.setText("Small");
        Settings.add(Stock12);
        Stock12.setBounds(765, 364, 41, 22);

        Stock13.setFont(new java.awt.Font("Rockwell Condensed", 1, 18)); // NOI18N
        Stock13.setForeground(new java.awt.Color(102, 102, 102));
        Stock13.setText(":");
        Settings.add(Stock13);
        Stock13.setBounds(867, 244, 17, 22);

        Stock14.setFont(new java.awt.Font("Rockwell Condensed", 1, 18)); // NOI18N
        Stock14.setForeground(new java.awt.Color(102, 102, 102));
        Stock14.setText(":");
        Settings.add(Stock14);
        Stock14.setBounds(867, 284, 17, 22);

        Stock15.setFont(new java.awt.Font("Rockwell Condensed", 1, 18)); // NOI18N
        Stock15.setForeground(new java.awt.Color(102, 102, 102));
        Stock15.setText(":");
        Settings.add(Stock15);
        Stock15.setBounds(867, 324, 17, 22);

        Stock16.setFont(new java.awt.Font("Rockwell Condensed", 1, 18)); // NOI18N
        Stock16.setForeground(new java.awt.Color(102, 102, 102));
        Stock16.setText(":");
        Settings.add(Stock16);
        Stock16.setBounds(867, 364, 17, 22);

        cs1.setFont(new java.awt.Font("Rockwell Condensed", 1, 18)); // NOI18N
        cs1.setForeground(new java.awt.Color(102, 102, 102));
        cs1.setText("Extra Large");
        Settings.add(cs1);
        cs1.setBounds(890, 244, 84, 22);

        cs2.setFont(new java.awt.Font("Rockwell Condensed", 1, 18)); // NOI18N
        cs2.setForeground(new java.awt.Color(102, 102, 102));
        cs2.setText("Extra Large");
        Settings.add(cs2);
        cs2.setBounds(890, 284, 84, 22);

        cs3.setFont(new java.awt.Font("Rockwell Condensed", 1, 18)); // NOI18N
        cs3.setForeground(new java.awt.Color(102, 102, 102));
        cs3.setText("Extra Large");
        Settings.add(cs3);
        cs3.setBounds(890, 324, 84, 22);

        cs4.setFont(new java.awt.Font("Rockwell Condensed", 1, 18)); // NOI18N
        cs4.setForeground(new java.awt.Color(102, 102, 102));
        cs4.setText("Extra Large");
        Settings.add(cs4);
        cs4.setBounds(890, 364, 84, 22);

        stocker.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        stocker.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.gray, java.awt.Color.darkGray, java.awt.Color.darkGray, java.awt.Color.gray));
        stocker.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stockerMouseClicked(evt);
            }
        });
        stocker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stockerActionPerformed(evt);
            }
        });
        Settings.add(stocker);
        stocker.setBounds(331, 287, 66, 23);

        jButton3.setBackground(new java.awt.Color(0, 155, 255));
        jButton3.setFont(new java.awt.Font("Script MT Bold", 0, 18)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Clear");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        Settings.add(jButton3);
        jButton3.setBounds(725, 421, 82, 31);

        clear.setBackground(new java.awt.Color(0, 155, 255));
        clear.setFont(new java.awt.Font("Rockwell Condensed", 0, 18)); // NOI18N
        clear.setForeground(new java.awt.Color(255, 255, 255));
        clear.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Extra Large", "Large", "Medium", "Small" }));
        clear.setOpaque(false);
        Settings.add(clear);
        clear.setBounds(825, 423, 101, 28);

        jButton4.setBackground(new java.awt.Color(204, 0, 51));
        jButton4.setFont(new java.awt.Font("Script MT Bold", 0, 18)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Clear all");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        Settings.add(jButton4);
        jButton4.setBounds(725, 463, 97, 31);

        set.setBackground(new java.awt.Color(51, 153, 255));
        set.setFont(new java.awt.Font("Bauhaus 93", 0, 24)); // NOI18N
        set.setForeground(new java.awt.Color(255, 255, 255));
        set.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        set.setText("Settings       ");
        set.setOpaque(true);
        Settings.add(set);
        set.setBounds(-340, 40, 350, 44);

        tab1.addTab("                     Settings                           ", Settings);

        getContentPane().add(tab1);
        tab1.setBounds(140, 120, 1130, 580);
        tab1.getAccessibleContext().setAccessibleName("                                    Search                                     ");

        bob.setFont(new java.awt.Font("DS-Digital", 1, 24)); // NOI18N
        bob.setForeground(new java.awt.Color(0, 155, 255));
        getContentPane().add(bob);
        bob.setBounds(1130, 30, 140, 50);

        jLabel13.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cover/made/wf.jpg"))); // NOI18N
        jLabel13.setText("Sign in");
        jLabel13.setMaximumSize(new java.awt.Dimension(1366, 768));
        jLabel13.setMinimumSize(new java.awt.Dimension(1366, 768));
        jLabel13.setPreferredSize(new java.awt.Dimension(1366, 768));
        jLabel13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel13MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel13);
        jLabel13.setBounds(0, 0, 1366, 770);

        stock5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        stock5.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.gray, java.awt.Color.darkGray, java.awt.Color.darkGray, java.awt.Color.gray));
        stock5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stock5ActionPerformed(evt);
            }
        });
        getContentPane().add(stock5);
        stock5.setBounds(60, 440, 66, 23);

        pack();
    }// </editor-fold>//GEN-END:initComponents
public int click=1,adsort;
    private void tab1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab1MouseClicked
AnimationClass a=new AnimationClass();
a.jLabelXRight(-330,0, 10, 5, detailp);
a.jLabelXLeft(0, -330, 10, 5, detailp);
a.jLabelXLeft(0, -340, 10, 5, set);
a.jLabelXLeft(70, -100, 10, 5, srh);

if(click==1)
{
     try{
        
         String sql="select * from data";
        Class.forName("com.mysql.jdbc.Driver");
        Connection con=(Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/project", "root", "");
        com.mysql.jdbc.Statement stmt=(com.mysql.jdbc.Statement)con.createStatement();
        PreparedStatement pst=con.prepareStatement(sql);
        
        ResultSet rs = pst.executeQuery();
        while(rs.next())
        {  
            DefaultTableModel model=(DefaultTableModel)table.getModel();
                 String value1=rs.getString("id");
                 String value2=rs.getString("name");
                 String value3=rs.getString("Extralarge_quantity");
                 String value4=rs.getString("large_quantity");
                 String value5=rs.getString("Medium_quantity");
                 String value6=rs.getString("Small_quantity");
                 String value7=rs.getString("Total_price");
            
            model.addRow(new Object[] {value1,value2,value3,value4,value5,value6,value7});
            
            click=0;
        }
    }
    
    catch(ClassNotFoundException | SQLException e)
    {
       
    }   
       
}
    // TODO add your handling code here:
    }//GEN-LAST:event_tab1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try{

            String sql = "select * from signin where firstname=?";
            try {
                Class.forName("com.mysql.jdbc.driver");
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(user.class.getName()).log(Level.SEVERE, null, ex);
            }
            Connection con=(Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/project","root","");
            com.mysql.jdbc.Statement stmt=(com.mysql.jdbc.Statement)con.createStatement();
            PreparedStatement pst=con.prepareStatement(sql);
            pst.setString(1,search.getText());
            
            ResultSet rs = pst.executeQuery();
            if(rs.next())
            {
                f1.setText((String) rs.getObject(1)+" "+(String) rs.getObject(2));
                b1.setText((String) rs.getObject(3));
                s1.setText((String) rs.getObject(4));
                e1.setText((String) rs.getObject(5));
                a1.setText((String) rs.getObject(6));
                p1.setText((String) rs.getObject(7));
                p2.setText((String) rs.getObject(8));
                d1.setText((String) rs.getObject(9));
            }
            else{
                JOptionPane.showMessageDialog(null,"incorrect");
            }

        } catch (SQLException | HeadlessException ex) {
            
        }// TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
       try{
           int row=table.getSelectedRow();  
           
           String eh=table.getModel().getValueAt(row,0).toString();
           String el=table.getModel().getValueAt(row,1).toString();
           
           Connection con=(Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/project","root","");
            com.mysql.jdbc.Statement stmt=(com.mysql.jdbc.Statement)con.createStatement();
             String sql ="DELETE FROM project.`data` WHERE id = ? AND `name` = ?;";
            PreparedStatement pst=con.prepareStatement(sql);
            pst.setString(1, eh);
            pst.setString(2, el);
            
            pst.execute();
            ((DefaultTableModel)table.getModel()).removeRow(row);
       }catch(SQLException e)
       {
          
       }
    }//GEN-LAST:event_deleteActionPerformed

    private void ascActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ascActionPerformed
        if(asc.isSelected()==true)
        {
            dsc.setSelected(false);
            if(adsort==1)
            {
                 String a= (String) sort.getSelectedItem();
                  if("SORT".equals(a))
                  {
                  JOptionPane.showMessageDialog(null,"select any content in sort");
                  }
                  else
                  {
                      try{
                      Connection con=(Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/project", "root", "");
                      Class.forName("com.mysql.jdbc.Driver");
                       com.mysql.jdbc.Statement stmt=(com.mysql.jdbc.Statement)con.createStatement();
                       String sql;
                      if( null != a)
                          switch (a) {
                              case "Name":
                                  try{
                                      sql="select * from data order by name";
                                      PreparedStatement pst=con.prepareStatement(sql);
                                      ResultSet rs=pst.executeQuery();
                                      table.setModel(DbUtils.resultSetToTableModel(rs));
                                  }catch(SQLException e)
                                  {e.getMessage();
                                  }        break;
                              case "Extralarge":
                                  try{
                                      sql="select * from data order by Extralarge_quantity";
                                      PreparedStatement pst=con.prepareStatement(sql);
                                      ResultSet rs=pst.executeQuery();
                                      table.setModel(DbUtils.resultSetToTableModel(rs));
                                  }catch(SQLException e)
                                  {e.getMessage();
                                  }        break;
                              case "Large":
                                  try{
                                      sql="select * from data order by Large_quantity";
                                      PreparedStatement pst=con.prepareStatement(sql);
                                      ResultSet rs=pst.executeQuery();
                                      table.setModel(DbUtils.resultSetToTableModel(rs));
                                  }catch(SQLException e)
                                  {e.getMessage();
                                  }        break;
                              case "Medium":
                                  try{
                                      sql="select * from data order by Medium_quantity";
                                      PreparedStatement pst=con.prepareStatement(sql);
                                      ResultSet rs=pst.executeQuery();
                                      table.setModel(DbUtils.resultSetToTableModel(rs));
                                  }catch(SQLException e)
                                  {e.getMessage();
                                  }     break;
                              case "Small":
                                  try{
                                      sql="select * from data order by Small_quantity";
                                      PreparedStatement pst=con.prepareStatement(sql);
                                      ResultSet rs=pst.executeQuery();
                                      table.setModel(DbUtils.resultSetToTableModel(rs));
                                  }catch(SQLException e)
                                  {e.getMessage();
                                  }        break;
                              case "Total_price":
                                  try{
                                      sql="select * from data order by Total_price";
                                      PreparedStatement pst=con.prepareStatement(sql);
                                      ResultSet rs=pst.executeQuery();
                                      table.setModel(DbUtils.resultSetToTableModel(rs));
                                  }catch(SQLException e)
                                  {e.getMessage();
                                  } break;
                              default:
                                  try{
                                      sql="select * from data order by id";
                                      PreparedStatement pst=con.prepareStatement(sql);
                                      ResultSet rs=pst.executeQuery();
                                      table.setModel(DbUtils.resultSetToTableModel(rs));
                                  }catch(SQLException e)
                                  {e.getMessage();
                                  }     break;
                          }
                      }catch(SQLException | ClassNotFoundException e)
                      {
                          e.getMessage();
                      }
                  }
                
            
            
            
            }
            
        }
     
     
     
    }//GEN-LAST:event_ascActionPerformed

    private void dscActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dscActionPerformed
      if(dsc.isSelected()==true)
      {
      asc.setSelected(false);
      String a= (String) sort.getSelectedItem();
                  if("SORT".equals(a))
                  {
                  JOptionPane.showMessageDialog(null,"select any content in sort");
                  }
                  else
                  {
                      try{
                      Connection con=(Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/project", "root", "");
                      Class.forName("com.mysql.jdbc.Driver");
                       com.mysql.jdbc.Statement stmt=(com.mysql.jdbc.Statement)con.createStatement();
                       String sql;
                          switch (a) {
                              case "Name":
                                  try{
                                      sql="select * from data order by name desc";
                                      PreparedStatement pst=con.prepareStatement(sql);
                                      ResultSet rs=pst.executeQuery();
                                      table.setModel(DbUtils.resultSetToTableModel(rs));
                                  }catch(SQLException e)
                                  {
                                  }        break;
                              case "Extralarge":
                                  try{
                                      sql="select * from data order by Extralarge_quantity desc";
                                      PreparedStatement pst=con.prepareStatement(sql);
                                      ResultSet rs=pst.executeQuery();
                                      table.setModel(DbUtils.resultSetToTableModel(rs));
                                  }catch(SQLException e)
                                  {
                                  }        break;
                              case "Large":
                                  try{
                                      sql="select * from data order by Large_quantity desc";
                                      PreparedStatement pst=con.prepareStatement(sql);
                                      ResultSet rs=pst.executeQuery();
                                      table.setModel(DbUtils.resultSetToTableModel(rs));
                                  }catch(SQLException e)
                                  {
                                  }        break;
                              case "Medium":
                                  try{
                                      sql="select * from data order by Medium_quantity desc";
                                      PreparedStatement pst=con.prepareStatement(sql);
                                      ResultSet rs=pst.executeQuery();
                                      table.setModel(DbUtils.resultSetToTableModel(rs));
                                  }catch(SQLException e)
                                  {
                                  }     break;
                              case "Small":
                                  try{
                                      sql="select * from data order by Small_quantity desc";
                                      PreparedStatement pst=con.prepareStatement(sql);
                                      ResultSet rs=pst.executeQuery();
                                      table.setModel(DbUtils.resultSetToTableModel(rs));
                                  }catch(SQLException e)
                                  {e.getMessage();
                                  }        break;
                              case "Total_price":
                                  try{
                                      sql="select * from data order by Total_price desc";
                                      PreparedStatement pst=con.prepareStatement(sql);
                                      ResultSet rs=pst.executeQuery();
                                      table.setModel(DbUtils.resultSetToTableModel(rs));
                                  }catch(SQLException e)
                                  {e.getMessage();
                                  } break;
                              default:
                                  try{
                                      sql="select * from data order by id desc";
                                      PreparedStatement pst=con.prepareStatement(sql);
                                      ResultSet rs=pst.executeQuery();
                                      table.setModel(DbUtils.resultSetToTableModel(rs));
                                  }catch(SQLException e)
                                  {e.getMessage();
                                  }     break;
                          }
                      }catch(SQLException | ClassNotFoundException e)
                      {
                          e.getMessage();
                      }
                  }
      }
        // TODO add your handling code here:
    }//GEN-LAST:event_dscActionPerformed

    private void sortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortActionPerformed
     adsort=1;
     if(asc.isSelected()==true)
        {
            String a= (String) sort.getSelectedItem();
                  if("SORT".equals(a))
                  {
                  JOptionPane.showMessageDialog(null,"select any content in sort");
                  }
                  else
                  {
                      try{
                      Connection con=(Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/project", "root", "");
                      Class.forName("com.mysql.jdbc.Driver");
                       com.mysql.jdbc.Statement stmt=(com.mysql.jdbc.Statement)con.createStatement();
                       String sql;
                          switch (a) {
                              case "Name":
                                  try{
                                      sql="select * from data order by name";
                                      PreparedStatement pst=con.prepareStatement(sql);
                                      ResultSet rs=pst.executeQuery();
                                      table.setModel(DbUtils.resultSetToTableModel(rs));
                                  }catch(SQLException e)
                                  {e.getMessage();
                                  }        break;
                              case "Extralarge":
                                  try{
                                      sql="select * from data order by Extralarge_quantity";
                                      PreparedStatement pst=con.prepareStatement(sql);
                                      ResultSet rs=pst.executeQuery();
                                      table.setModel(DbUtils.resultSetToTableModel(rs));
                                  }catch(SQLException e)
                                  {e.getMessage();
                                  }        break;
                              case "Large":
                                  try{
                                      sql="select * from data order by Large_quantity";
                                      PreparedStatement pst=con.prepareStatement(sql);
                                      ResultSet rs=pst.executeQuery();
                                      table.setModel(DbUtils.resultSetToTableModel(rs));
                                  }catch(SQLException e)
                                  {e.getMessage();
                                  }        break;
                              case "Medium":
                                  try{
                                      sql="select * from data order by Medium_quantity";
                                      PreparedStatement pst=con.prepareStatement(sql);
                                      ResultSet rs=pst.executeQuery();
                                      table.setModel(DbUtils.resultSetToTableModel(rs));
                                  }catch(SQLException e)
                                  {e.getMessage();
                                  }     break;
                              case "Small":
                                  try{
                                      sql="select * from data order by Small_quantity";
                                      PreparedStatement pst=con.prepareStatement(sql);
                                      ResultSet rs=pst.executeQuery();
                                      table.setModel(DbUtils.resultSetToTableModel(rs));
                                  }catch(SQLException e)
                                  {
                                  }        break;
                              case "Total_price":
                                  try{
                                      sql="select * from data order by Total_price";
                                      PreparedStatement pst=con.prepareStatement(sql);
                                      ResultSet rs=pst.executeQuery();
                                      table.setModel(DbUtils.resultSetToTableModel(rs));
                                  }catch(SQLException e)
                                  {
                                  } break;
                              default:
                                  try{
                                      sql="select * from data order by id";
                                      PreparedStatement pst=con.prepareStatement(sql);
                                      ResultSet rs=pst.executeQuery();
                                      table.setModel(DbUtils.resultSetToTableModel(rs));
                                  }catch(SQLException e)
                                  {
                                  }     break;
                          }
                      }catch(SQLException | ClassNotFoundException e)
                      {
                          
                      }
                  }
                
            
        }
     else if(dsc.isSelected()==true)
     {
         String a= (String) sort.getSelectedItem();
                  if("SORT".equals(a))
                  {
                  JOptionPane.showMessageDialog(null,"select any content in sort");
                  }
                  else
                  {
                      try{
                      Connection con=(Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/project", "root", "");
                      Class.forName("com.mysql.jdbc.Driver");
                       com.mysql.jdbc.Statement stmt=(com.mysql.jdbc.Statement)con.createStatement();
                       String sql;
                          switch (a) {
                              case "Name":
                                  try{
                                      sql="select * from data order by name desc";
                                      PreparedStatement pst=con.prepareStatement(sql);
                                      ResultSet rs=pst.executeQuery();
                                      table.setModel(DbUtils.resultSetToTableModel(rs));
                                  }catch(SQLException e)
                                  {
                                  }        break;
                              case "Extralarge":
                                  try{
                                      sql="select * from data order by Extralarge_quantity desc";
                                      PreparedStatement pst=con.prepareStatement(sql);
                                      ResultSet rs=pst.executeQuery();
                                      table.setModel(DbUtils.resultSetToTableModel(rs));
                                  }catch(SQLException e)
                                  {
                                  }        break;
                              case "Large":
                                  try{
                                      sql="select * from data order by Large_quantity desc";
                                      PreparedStatement pst=con.prepareStatement(sql);
                                      ResultSet rs=pst.executeQuery();
                                      table.setModel(DbUtils.resultSetToTableModel(rs));
                                  }catch(SQLException e)
                                  {e.getMessage();
                                  }        break;
                              case "Medium":
                                  try{
                                      sql="select * from data order by Medium_quantity desc";
                                      PreparedStatement pst=con.prepareStatement(sql);
                                      ResultSet rs=pst.executeQuery();
                                      table.setModel(DbUtils.resultSetToTableModel(rs));
                                  }catch(SQLException e)
                                  {
                                  }     break;
                              case "Small":
                                  try{
                                      sql="select * from data order by Small_quantity desc";
                                      PreparedStatement pst=con.prepareStatement(sql);
                                      ResultSet rs=pst.executeQuery();
                                      table.setModel(DbUtils.resultSetToTableModel(rs));
                                  }catch(SQLException e)
                                  {
                                  }        break;
                              case "Total_price":
                                  try{
                                      sql="select * from data order by Total_price desc";
                                      PreparedStatement pst=con.prepareStatement(sql);
                                      ResultSet rs=pst.executeQuery();
                                      table.setModel(DbUtils.resultSetToTableModel(rs));
                                  }catch(SQLException e)
                                  {
                                  } break;
                              default:
                                  try{
                                      sql="select * from data order by id desc";
                                      PreparedStatement pst=con.prepareStatement(sql);
                                      ResultSet rs=pst.executeQuery();
                                      table.setModel(DbUtils.resultSetToTableModel(rs));
                                  }catch(SQLException e)
                                  {
                                  }     break;
                          }
                      }catch(SQLException | ClassNotFoundException e)
                      {
                          
                      }
                  }
         
     }
// TODO add your handling code here:
    }//GEN-LAST:event_sortActionPerformed

    private void logoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutMouseClicked
        login log = new login();
        log.setVisible(true);
        this.setVisible(false);// TODO add your handling code here:
    }//GEN-LAST:event_logoutMouseClicked

    private void stock1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stock1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stock1ActionPerformed

    private void stock3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stock3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stock3ActionPerformed

    private void stock4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stock4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stock4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection con=(Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/project", "root", "");
            com.mysql.jdbc.Statement stmt=(com.mysql.jdbc.Statement)con.createStatement();
            String query="select * from stock";
            PreparedStatement pop=con.prepareStatement(query);
            ResultSet sop =pop.executeQuery();
            if(sop.next())
            {
                if(!stock1.getText().equals(stock5.getText()))
                {
                
                    int res1;
                String sql="update stock set extralarge=? where id=1";
                res1 =(int) sop.getObject(1);
                int co=Integer.parseInt((String)stock1.getText());
                res1=res1+co;
                String re=String.valueOf(res1);
                PreparedStatement pst=con.prepareStatement(sql);
                pst.setString(1,re);
                pst.execute();
            
                }
                if(!stocker.getText().equals(stock5.getText()))
                {
                
                    int res1;
                String sql="update stock set large=? where id=1";
                res1 =(int) sop.getObject(2);
                int co=Integer.parseInt((String)stocker.getText());
                res1=res1+co;
                String re=String.valueOf(res1);
                PreparedStatement pst=con.prepareStatement(sql);
                pst.setString(1,re);
                pst.execute();
            
                }
                if(!stock3.getText().equals(stock5.getText()))
                {
                
                    int res1;
                String sql="update stock set medium=? where id=1";
                res1 =(int) sop.getObject(3);
                int co=Integer.parseInt((String)stock3.getText());
                res1=res1+co;
                String re=String.valueOf(res1);
                PreparedStatement pst=con.prepareStatement(sql);
                pst.setString(1,re);
                pst.execute();
            
                }
                if(!stock4.getText().equals(stock5.getText()))
                {
                
                    int res1;
                String sql="update stock set small=? where id=1";
                res1 =(int) sop.getObject(4);
                int co=Integer.parseInt((String)stock4.getText());
                res1=res1+co;
                String re=String.valueOf(res1);
                PreparedStatement pst=con.prepareStatement(sql);
                pst.setString(1,re);
                pst.execute();
            
                }
            }
        JOptionPane.showMessageDialog(null,"Stock updated");
        String query1="select * from stock";
        PreparedStatement ps=con.prepareStatement(query1);
         ResultSet rs=ps.executeQuery();
         if(rs.next())
         {
             cs1.setText(rs.getString("extralarge"));
             cs2.setText(rs.getString("large"));
             cs3.setText(rs.getString("medium"));
             cs4.setText(rs.getString("small"));
             stock1.setText(null);
             stocker.setText(null);
             stock3.setText(null);
             stock4.setText(null);
             
         }
        
        
        
        
        }catch(ClassNotFoundException | SQLException | NumberFormatException | HeadlessException e){ JOptionPane.showMessageDialog(null,e.getMessage());}
        

    }//GEN-LAST:event_jButton2ActionPerformed

    private void stock5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stock5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stock5ActionPerformed

    private void stock1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stock1MouseClicked
   stock1.setText(null);
        
    }//GEN-LAST:event_stock1MouseClicked

    private void stock3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stock3MouseClicked
      stock3.setText(null);
    }//GEN-LAST:event_stock3MouseClicked

    private void stock4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stock4MouseClicked
      stock4.setText(null);
        
    }//GEN-LAST:event_stock4MouseClicked

    private void stockerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stockerMouseClicked
        stocker.setText(null);
    }//GEN-LAST:event_stockerMouseClicked

    private void stockerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stockerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stockerActionPerformed

    private void jLabel13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel13MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel13MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection con=(Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/project", "root", "");
            com.mysql.jdbc.Statement stmt=(com.mysql.jdbc.Statement)con.createStatement();
            
           
            
            
            if(clear.getSelectedItem()=="Extra Large"){
                String sql="update stock set extralarge=0 where id=1";
                PreparedStatement pst=con.prepareStatement(sql);
                pst.execute();
            }
            if(clear.getSelectedItem()=="Large"){
                String sql="update stock set large=0 where id=1";
                PreparedStatement pst=con.prepareStatement(sql);
                pst.execute();
            }
            if(clear.getSelectedItem()=="Medium"){
                String sql="update stock set medium=0 where id=1";
                PreparedStatement pst=con.prepareStatement(sql);
                pst.execute();
            }
            if(clear.getSelectedItem()=="Small"){
                String sql="update stock set small=0 where id=1";
                PreparedStatement pst=con.prepareStatement(sql);
                pst.execute();
            }
            String query1="select * from stock";
            PreparedStatement ps=con.prepareStatement(query1);
            ResultSet rs=ps.executeQuery();
            if(rs.next())
            {
             cs1.setText(rs.getString("extralarge"));
             cs2.setText(rs.getString("large"));
             cs3.setText(rs.getString("medium"));
             cs4.setText(rs.getString("small"));
             
            }
       
       
       }catch(ClassNotFoundException | SQLException e){}
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection con=(Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/project", "root", "");
            com.mysql.jdbc.Statement stmt=(com.mysql.jdbc.Statement)con.createStatement();
            String sql="update stock set extralarge=0 where id=1";
            String sql1="update stock set large=0 where id=1";
            String sql2="update stock set medium=0 where id=1";
            String sql3="update stock set small=0 where id=1";
            PreparedStatement pst=con.prepareStatement(sql);
            PreparedStatement pst1=con.prepareStatement(sql1);
            PreparedStatement pst2=con.prepareStatement(sql2);
            PreparedStatement pst3=con.prepareStatement(sql3);
            pst.execute();
            pst1.execute();
            pst2.execute();
            pst3.execute();
            String query1="select * from stock";
            PreparedStatement ps=con.prepareStatement(query1);
            ResultSet rs=ps.executeQuery();
            if(rs.next()){
             cs1.setText(rs.getString("extralarge"));
             cs2.setText(rs.getString("large"));
             cs3.setText(rs.getString("medium"));
             cs4.setText(rs.getString("small"));}
       
       
       }catch(ClassNotFoundException | SQLException e){}
    }//GEN-LAST:event_jButton4ActionPerformed

    private void SettingsMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SettingsMouseMoved

AnimationClass a=new AnimationClass();
a.jLabelXRight(-340,0, 5, 5, set);


    }//GEN-LAST:event_SettingsMouseMoved

    private void search1MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_search1MouseMoved
       AnimationClass a=new AnimationClass();
        a.jLabelXRight(-100, 70, 10,5,srh);
    }//GEN-LAST:event_search1MouseMoved

    private void searchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchKeyPressed
       if(evt.getKeyCode()==KeyEvent.VK_ENTER){
                                                     
        try{

            String sql = "select * from signin where firstname=?";
            try {
                Class.forName("com.mysql.jdbc.driver");
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(user.class.getName()).log(Level.SEVERE, null, ex);
            }
            Connection con=(Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/project","root","");
            com.mysql.jdbc.Statement stmt=(com.mysql.jdbc.Statement)con.createStatement();
            PreparedStatement pst=con.prepareStatement(sql);
            pst.setString(1,search.getText());
            
            ResultSet rs = pst.executeQuery();
            if(rs.next())
            {
                f1.setText((String) rs.getObject(1)+" "+(String) rs.getObject(2));
                b1.setText((String) rs.getObject(3));
                s1.setText((String) rs.getObject(4));
                e1.setText((String) rs.getObject(5));
                a1.setText((String) rs.getObject(6));
                p1.setText((String) rs.getObject(7));
                p2.setText((String) rs.getObject(8));
                d1.setText((String) rs.getObject(9));
            }
            else{
                JOptionPane.showMessageDialog(null,"incorrect");
            }

        } catch (SQLException | HeadlessException ex) {
            
        }
       
           
       }
    }//GEN-LAST:event_searchKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new admin().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Settings;
    private javax.swing.JLabel Stock1;
    private javax.swing.JLabel Stock10;
    private javax.swing.JLabel Stock11;
    private javax.swing.JLabel Stock12;
    private javax.swing.JLabel Stock13;
    private javax.swing.JLabel Stock14;
    private javax.swing.JLabel Stock15;
    private javax.swing.JLabel Stock16;
    private javax.swing.JLabel Stock2;
    private javax.swing.JLabel Stock3;
    private javax.swing.JLabel Stock4;
    private javax.swing.JLabel Stock5;
    private javax.swing.JLabel Stock6;
    private javax.swing.JLabel Stock7;
    private javax.swing.JLabel Stock8;
    private javax.swing.JLabel Stock9;
    private javax.swing.JLabel a1;
    private javax.swing.JRadioButton asc;
    private javax.swing.JLabel b1;
    private javax.swing.JLabel belief;
    private javax.swing.JLabel bob;
    private javax.swing.JComboBox clear;
    private javax.swing.JLabel cs1;
    private javax.swing.JLabel cs2;
    private javax.swing.JLabel cs3;
    private javax.swing.JLabel cs4;
    private javax.swing.JLabel d1;
    private javax.swing.JButton delete;
    private javax.swing.JLabel detailp;
    private javax.swing.JPanel details;
    private javax.swing.JRadioButton dsc;
    private javax.swing.JLabel e1;
    private javax.swing.JLabel f1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel logout;
    private javax.swing.JLabel p1;
    private javax.swing.JLabel p2;
    private javax.swing.JLabel s1;
    private javax.swing.JTextField search;
    private javax.swing.JPanel search1;
    private javax.swing.JLabel set;
    private javax.swing.JComboBox sort;
    private javax.swing.JLabel srh;
    private javax.swing.JTextField stock1;
    private javax.swing.JTextField stock3;
    private javax.swing.JTextField stock4;
    private javax.swing.JTextField stock5;
    private javax.swing.JTextField stocker;
    private javax.swing.JTabbedPane tab1;
    private javax.swing.JTable table;
    private javax.swing.JLabel un;
    // End of variables declaration//GEN-END:variables
}
